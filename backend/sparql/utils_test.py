from .utils import invalid_xml_remove
import os.path as op

HERE = op.dirname(op.abspath(__file__))

INVALID_STR = '''La trilogie a en eet
comptabilis√© plus de 26 millions de vente.'''

VALID_STR = '''La trilogie a en e et
comptabilis√© plus de 26 millions de vente.'''

FULL_STR = """Babelio, Missbouquin (id_12_a) --- Et voil√† √ßa y est ! j'ai enfin lu le premier tome de Millenium ! Harcel√©e
par deux de mes meilleures amies (l'une a fini par me l'offrir), j'ai pris
mon courage √† deux mains et me suis attaqu√©e √† la s√©rie qui a connu
un succ√®s immense depuis sa publication en 2005. La trilogie a en eet
comptabilis√© plus de 26 millions de vente.
Pour moi, ce n'√©tait pas gagn√© d'avance. Je l'ai commenc√© avec r√©ti-
cence car je n'aime pas le genre du roman policier / roman noir. Je suis
trop sensible et assez impressionnable donc je m'en passe tr√®s bien.
On m'a cependant assur√© que Millenium allait me plaire, etc etc. Bien.
Alors je le commence le mardi matin dans le RER. Je le lis tranquille,
j'accroche bien. Mardi passe. Mercredi, je rentre plus t√¥t d'une formation
et comme je le fais parfois, je continue ma lecture en marchant (non non
ne vous inqui√©tez pas, il ne va rien m'arriver). Incapable de d√©crocher, je
me laisse 30 minutes le temps de boire un th√©, en continuant ma lecture.
Il √©tait 18h. Finalement, je repose le bouquin √† 21H30. Termin√©.
C'est un v√©ritable page-turner comme on appelle ces romans qui sont √†
la limite de l'addiction, tant une page appelle la suivante, tant l'histoire
est prenante. Effectivement, j'ai √©t√© impressionn√©e par l'ampleur de ce
roman assez complexe, m√™lant crimes et arnaques financi√®res, avec au
centre un journaliste et une jeune femme sous tutelle et assez...sp√©ciale"""


def test_xml_sanitize():
    assert VALID_STR == invalid_xml_remove(VALID_STR)
    assert INVALID_STR[18] == chr(0x1b) == '\x1b'
    sanitized_str = invalid_xml_remove(INVALID_STR)
    assert sanitized_str[18] == chr(0x20) == ' '
    print(len(FULL_STR), len(invalid_xml_remove(FULL_STR)))
    assert FULL_STR == invalid_xml_remove(FULL_STR)


def test_sanitize_file():
    fp1 = op.join(HERE, 'testfiles', '1.txt')

    with open(fp1, 'r') as f1:
        c1 = f1.read()
        c1_san = invalid_xml_remove(c1)
        assert c1[319] == chr(0x1b) == '\x1b'
        assert c1_san[319] == chr(0x20) == ' '
        assert len(c1) == len(c1_san)
